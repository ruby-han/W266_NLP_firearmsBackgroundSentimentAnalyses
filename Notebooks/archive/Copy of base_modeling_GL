{"cells":[{"cell_type":"markdown","metadata":{"id":"nR8dyx0AHsVb"},"source":["### Import Packages"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W5paQvvxX1BS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658351652441,"user_tz":420,"elapsed":32934,"user":{"displayName":"Gerrit Lensink","userId":"14030898330788478401"}},"outputId":"7928888d-910d-4321-ac7d-d0e99dc5acad"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[K     |████████████████████████████████| 24.2 MB 1.4 MB/s \n","\u001b[K     |████████████████████████████████| 4.9 MB 5.1 MB/s \n","\u001b[K     |████████████████████████████████| 4.4 MB 5.1 MB/s \n","\u001b[K     |████████████████████████████████| 101 kB 12.5 MB/s \n","\u001b[K     |████████████████████████████████| 6.6 MB 58.2 MB/s \n","\u001b[K     |████████████████████████████████| 596 kB 69.8 MB/s \n","\u001b[K     |████████████████████████████████| 1.1 MB 5.1 MB/s \n","\u001b[?25h"]}],"source":["#@title Imports\n","\n","!pip install pydot --quiet\n","!pip install gensim==3.8.3 --quiet\n","!pip install tensorflow-datasets --quiet\n","!pip install -U tensorflow-text==2.8.2 --quiet\n","!pip install transformers --quiet\n","!pip install pydot --quiet\n","!pip install tensorflow_addons --quiet"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yVCGGpRCDmWU"},"outputs":[],"source":["# Import packages\n","import pandas as pd\n","import numpy as np\n","from tensorflow import keras\n","\n","from tensorflow.keras.layers import Embedding, Input, Dense, Lambda\n","from tensorflow.keras.models import Model\n","import tensorflow.keras.backend as K\n","import tensorflow_datasets as tfds\n","import tensorflow_text as tf_text\n","import tensorflow_addons as tfa\n","\n","from google.colab import drive\n","\n","from collections import Counter\n","import matplotlib.pyplot as plt\n","from nltk.util import ngrams\n","\n","from transformers import BertTokenizer, TFBertModel\n","from tqdm.notebook import tqdm\n","from keras.preprocessing.sequence import pad_sequences\n","\n","from sklearn.model_selection import train_test_split\n","import tensorflow as tf\n","\n","\n","import time\n","from transformers import create_optimizer\n","\n","import sklearn as sk\n","import os\n","import nltk\n","from nltk.corpus import reuters\n","from nltk.data import find\n","\n","import re\n","\n","import gensim\n","from sklearn.metrics.pairwise import cosine_similarity\n","from transformers import BertModel\n"]},{"cell_type":"code","source":["pd.set_option(\"display.max_rows\", None, # display all rows\n","              \"display.max_columns\", None, # display all columns\n","              \"display.max_colwidth\", None, # expand column width\n","              \"display.html.use_mathjax\", False) # disable Latex style mathjax rendering"],"metadata":{"id":"Mv7MzE4WmHMf"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NFPBnrozD6RK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658351743755,"user_tz":420,"elapsed":76885,"user":{"displayName":"Gerrit Lensink","userId":"14030898330788478401"}},"outputId":"d3efe851-a661-4b17-c460-606da1f461e2"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /drive\n","/drive/.shortcut-targets-by-id/1p1bDkEjmNKPzX456WZWBr8qtvPr6Pt5m/W266 Project/Colab Notebooks/Exploration\n","/drive/.shortcut-targets-by-id/1p1bDkEjmNKPzX456WZWBr8qtvPr6Pt5m/W266 Project/Colab Notebooks/Exploration\n"]}],"source":["drive.mount('/drive') \n","%cd /drive/MyDrive/W266 Project/Colab Notebooks/Exploration\n","!pwd"]},{"cell_type":"markdown","metadata":{"id":"xPWjxRSHoA6p"},"source":["# Model - BERT"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eWpis5aUnysI"},"outputs":[],"source":["final_train = pd.read_csv('../../data/transformed/final/train_base.csv').sample(frac = 1) # shuffle rows\n","final_test = pd.read_csv('../../data/transformed/final/test_base.csv').sample(frac = 1) # shuffle rows"]},{"cell_type":"code","source":["\n","# \n","# print(small_data_size, train_size, test_size, pos_exs, neg_exs)"],"metadata":{"id":"lcMrNiMsH3z3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["small_data_size = 100000\n","train_split = .8\n","train_size = int(small_data_size * train_split)\n","test_size = small_data_size - train_size\n","\n","# Reduce size of data for quick testing \n","small_train = final_train.sample(n = train_size, \n","                                 random_state = 2)\n","small_test = final_test.sample(n = test_size, \n","                               random_state = 2)\n","\n","# undersample_rate = .7\n","# pos_exs = int(train_size * .7)\n","# neg_exs = train_size - pos_exs\n","\n","# # Simulate Undersampling\n","# small_train_1 = final_train[final_train['violent'] == 1]\\\n","#                 .sample(n = pos_exs, \n","#                         random_state = 2)\n","                \n","# small_train_0 = final_train[final_train['violent'] == 0]\\\n","#                 .sample(n = neg_exs, \n","#                         random_state = 2)\n","                \n","# small_train = pd.concat([small_train_1, small_train_0], \n","#                         ignore_index=True, axis=0)\n","\n","# repoint to avoid having to update code below\n","final_train = small_train\n","final_test = small_test"],"metadata":{"id":"x81SBJ7Eug4N"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p7GY1WTXojZW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658351746934,"user_tz":420,"elapsed":8,"user":{"displayName":"Gerrit Lensink","userId":"14030898330788478401"}},"outputId":"6e94ef8a-8542-4e0a-a956-bd1a33614f40"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    71881\n","1     8119\n","Name: violent, dtype: int64"]},"metadata":{},"execution_count":8}],"source":["# quick check to make sure we see expected representation of 0 and 1\n","final_train['violent'].value_counts()\n","# final_test['violent'].value_counts()"]},{"cell_type":"markdown","metadata":{"id":"zuyES9gnEXHw"},"source":["Import helper functions"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5JG43fibEWq1"},"outputs":[],"source":["#@title Plotting Function\n","\n","# 4-window plot. Small modification from matplotlib examples.\n","\n","def make_plot(axs, history1, \n","              history2, \n","              y_lim_loss_lower=0.4, \n","              y_lim_loss_upper=0.6,\n","              y_lim_accuracy_lower=0.7, \n","              y_lim_accuracy_upper=0.8,\n","              model_1_name='model 1',\n","              model_2_name='model 2',\n","              \n","             ):\n","    box = dict(facecolor='yellow', pad=5, alpha=0.2)\n","\n","    ax1 = axs[0, 0]\n","    ax1.plot(history1.history['loss'])\n","    ax1.plot(history1.history['val_loss'])\n","    ax1.set_title('loss - ' + model_1_name)\n","    ax1.set_ylabel('loss', bbox=box)\n","    ax1.set_ylim(y_lim_loss_lower, y_lim_loss_upper)\n","\n","    ax3 = axs[1, 0]\n","    ax3.set_title('accuracy - ' + model_1_name)\n","    ax3.plot(history1.history['accuracy'])\n","    ax3.plot(history1.history['val_accuracy'])\n","    ax3.set_ylabel('accuracy', bbox=box)\n","    ax3.set_ylim(y_lim_accuracy_lower, y_lim_accuracy_upper)\n","\n","\n","    ax2 = axs[0, 1]\n","    ax2.set_title('loss - ' + model_2_name)\n","    ax2.plot(history2.history['loss'])\n","    ax2.plot(history2.history['val_loss'])\n","    ax2.set_ylim(y_lim_loss_lower, y_lim_loss_upper)\n","\n","    ax4 = axs[1, 1]\n","    ax4.set_title('accuracy - ' + model_2_name)\n","\n","    # small adjustment to account for the 2 accuracy measures in the Weighted Averging Model with Attention\n","    if 'classification_accuracy' in history2.history.keys():\n","      ax4.plot(history2.history['classification_accuracy'])\n","    else:\n","      ax4.plot(history2.history['accuracy'])\n","    \n","    if 'val_classification_accuracy' in history2.history.keys():\n","      ax4.plot(history2.history['val_classification_accuracy'])\n","    else:\n","      ax4.plot(history2.history['val_accuracy'])\n","    ax4.set_ylim(y_lim_accuracy_lower, y_lim_accuracy_upper)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8MHhB1yeErJB","executionInfo":{"status":"ok","timestamp":1658351747964,"user_tz":420,"elapsed":1035,"user":{"displayName":"Gerrit Lensink","userId":"14030898330788478401"}},"colab":{"base_uri":"https://localhost:8080/","height":113,"referenced_widgets":["9fd80025af1d405f887d3574075c2992","eea87e46bb334af39efca2d2bbef7e9c","dc7e8f021de946fe9c8887ecdc6a6198","cc61881a6f894d77a455745d766354e3","925704a124144e19a6764a4a3e8eb4e7","59515d36754244aea12f717a57e5d640","33a4a7f508d548d69b9d71efd38a2e90","e2abde66e0454606b7f1198378ebcf53","913ddc8c0ac14c1cb667c366ffc1d4db","4b5ce12eafb84109a1252527b09ccfd1","28ad0ad10a6f439086efc499fa3a3863","ab5e93c01c4641dbb69e6fd0c8f2360d","327593d6e59448f0b04da7f17a6778b2","fbf1d2bb603d4f70bbe24dc0686def4e","1739bcd70c004b69a77196be5ea41020","ce3486c0682b4f58bfead11b732cb82a","b003eb4a8e304da599705f498d484085","373f9106bf754682b515fa6a4f2c442f","b3726523a2524b689ca03562350c495a","55898b8fd8e8492cbabfd03557e3ab96","1f4d1cde1a28473ab74a4ea9c4b66a55","f45ec4ef41904d57b6f2072d3d16ef3d","e6ce905dd79b47d4a1254fc570679ca6","3ab15706d25642bcb03a5115496ad91d","abab4c1928724911aef343dfbc0523b9","3fa073871e5a45ae9d1a1870390cdf5b","5c1cf91bf26742b8a267fdfe7de2d237","52ef1bfe36524504ab7df0093a346449","2c0d99c6a4cf4c5baf64bbaf7f87ff2e","4aaec29fb163489e965f8261b1c0d54f","187167fc82934686bf69e300a6dc5a21","292c8a5c27b14971830f5182d0c0fef1","a7622ba6293e463ebbbe7c57386bf5db"]},"outputId":"5457e5a0-2cd5-412f-d017-88c0dbd07797"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/208k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9fd80025af1d405f887d3574075c2992"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/29.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ab5e93c01c4641dbb69e6fd0c8f2360d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/570 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e6ce905dd79b47d4a1254fc570679ca6"}},"metadata":{}}],"source":["bert_tokenizer = BertTokenizer.from_pretrained('bert-base-cased', do_lower_case = False)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6Nh-6diNErGJ"},"outputs":[],"source":["max_length = 128\n","\n","x_train = bert_tokenizer(list(final_train['comment_text_transf']),\n","                         max_length = max_length,\n","                         truncation = True,\n","                         padding = 'max_length',\n","                         return_tensors = 'tf')\n","y_train = list(final_train['violent'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"V3skPllBErDj"},"outputs":[],"source":["x_test = bert_tokenizer(list(final_test['comment_text_transf'].apply(str)),\n","                         max_length = max_length,\n","                         truncation = True,\n","                         padding = 'max_length',\n","                         return_tensors = 'tf')\n","y_test = list(final_test['violent'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RzjsndOaTAYa"},"outputs":[],"source":["def create_bert_cls_model(hidden_size = 100, dropout = .3, learning_rate = .00005, weight_decay = 0):\n","    bert_model = TFBertModel.from_pretrained('bert-base-cased', num_labels = 2)\n","\n","    # Build the input layers\n","    input_ids = tf.keras.layers.Input(shape=(max_length,), dtype=tf.int64, name='input_ids_layer')\n","    token_type_ids = tf.keras.layers.Input(shape=(max_length,), dtype=tf.int64, name='token_type_ids_layer')\n","    attention_mask = tf.keras.layers.Input(shape=(max_length,), dtype=tf.int64, name='attention_mask_layer')\n","\n","    # Dictionary of inputs\n","    bert_inputs = {'input_ids': input_ids,\n","                   'token_type_ids': token_type_ids,\n","                   'attention_mask': attention_mask} \n","\n","    # bert_inputs = {'input_ids': input_ids} \n","\n","    # model output\n","    bert_out = bert_model(bert_inputs) \n","\n","    # Instead of pooled token, using the 'cls' token \n","    pooled_token = bert_out[1]\n","    # cls_token = bert_out[0][:,0] # First layer, 0th column of each token set\n","\n","\n","    # Hidden layers\n","    hidden = tf.keras.layers.Dense(hidden_size, activation='relu', name='hidden_layer_1')(pooled_token)\n","    hidden = tf.keras.layers.Dropout(dropout)(hidden)  \n","\n","    classification = tf.keras.layers.Dense(1, activation='sigmoid',name='classification_layer')(hidden) # was cls_token\n","\n","    # instantiate model\n","    classification_model = tf.keras.Model(inputs=[input_ids, token_type_ids, attention_mask], outputs=[classification])\n","    # classification_model = tf.keras.Model(inputs=input_ids, outputs=[classification])\n","    \n","    # compile model\n","    # classification_model.compile(optimizer=tfa.optimizers.AdamW(learning_rate = learning_rate,\n","    #                                                             weight_decay = weight_decay),\n","    classification_model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=learning_rate),\n","                            loss=tf.keras.losses.BinaryCrossentropy(from_logits=False), \n","                            metrics=['Precision', 'Recall',\n","                                     'TrueNegatives', 'TruePositives', \n","                                     'FalsePositives', 'FalseNegatives',\n","                                     'accuracy', 'AUC', \n","                                     ])\n","   \n","    ### END YOUR CODE\n","    \n","    return classification_model"]},{"cell_type":"code","source":["# bert_out = bert_model(bert_inputs, output_hidden_states = True) "],"metadata":{"id":"p5Qt23ET2riS"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Test chunk"],"metadata":{"id":"Z8PcGKjscfhK"}},{"cell_type":"code","source":["\n","\n","# bert_cls_model = create_bert_cls_model(hidden_size = 150, dropout = .3, learning_rate = .00005)\n","\n","# bert_cls_model.summary()\n","\n","# display(keras.utils.plot_model(bert_cls_model, show_shapes=True, dpi=90))\n","\n","# bert_cls_model_history2 = bert_cls_model.fit([x_train.input_ids, x_train.token_type_ids, x_train.attention_mask], \n","#                                 np.array(y_train),   \n","#                                 validation_data=([x_test.input_ids, x_test.token_type_ids, x_test.attention_mask], \n","#                                                  np.array(y_test)),    \n","#                                 batch_size=32, \n","#                                 epochs=5)"],"metadata":{"id":"Z9p3WR32M1oZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["bert_cls_model = create_bert_cls_model(hidden_size = 150, dropout = .3, learning_rate = .00003)\n","\n","bert_cls_model.summary()\n","\n","display(keras.utils.plot_model(bert_cls_model, show_shapes=True, dpi=90))\n","\n","bert_cls_model_history2 = bert_cls_model.fit([x_train.input_ids, x_train.token_type_ids, x_train.attention_mask], \n","                                np.array(y_train),   \n","                                validation_data=([x_test.input_ids, x_test.token_type_ids, x_test.attention_mask], \n","                                                 np.array(y_test)),    \n","                                batch_size=8, \n","                                epochs=5)\n","\n"],"metadata":{"id":"NkIL2Gci0Sj4","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"24b4ed06-0957-45a9-de6d-ae5c2e6ed36a","executionInfo":{"status":"ok","timestamp":1658361256974,"user_tz":420,"elapsed":7764525,"user":{"displayName":"Gerrit Lensink","userId":"14030898330788478401"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["Some layers from the model checkpoint at bert-base-cased were not used when initializing TFBertModel: ['nsp___cls', 'mlm___cls']\n","- This IS expected if you are initializing TFBertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFBertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","All the layers of TFBertModel were initialized from the model checkpoint at bert-base-cased.\n","If your task is similar to the task the model of the checkpoint was trained on, you can already use TFBertModel for predictions without further training.\n"]},{"output_type":"stream","name":"stdout","text":["Model: \"model_1\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," attention_mask_layer (InputLay  [(None, 128)]       0           []                               \n"," er)                                                                                              \n","                                                                                                  \n"," input_ids_layer (InputLayer)   [(None, 128)]        0           []                               \n","                                                                                                  \n"," token_type_ids_layer (InputLay  [(None, 128)]       0           []                               \n"," er)                                                                                              \n","                                                                                                  \n"," tf_bert_model_1 (TFBertModel)  TFBaseModelOutputWi  108310272   ['attention_mask_layer[0][0]',   \n","                                thPoolingAndCrossAt               'input_ids_layer[0][0]',        \n","                                tentions(last_hidde               'token_type_ids_layer[0][0]']   \n","                                n_state=(None, 128,                                               \n","                                 768),                                                            \n","                                 pooler_output=(Non                                               \n","                                e, 768),                                                          \n","                                 past_key_values=No                                               \n","                                ne, hidden_states=N                                               \n","                                one, attentions=Non                                               \n","                                e, cross_attentions                                               \n","                                =None)                                                            \n","                                                                                                  \n"," hidden_layer_1 (Dense)         (None, 150)          115350      ['tf_bert_model_1[0][1]']        \n","                                                                                                  \n"," dropout_75 (Dropout)           (None, 150)          0           ['hidden_layer_1[0][0]']         \n","                                                                                                  \n"," classification_layer (Dense)   (None, 1)            151         ['dropout_75[0][0]']             \n","                                                                                                  \n","==================================================================================================\n","Total params: 108,425,773\n","Trainable params: 108,425,773\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Image object>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","10000/10000 [==============================] - 1564s 155ms/step - loss: 0.1193 - precision: 0.8282 - recall: 0.6990 - true_negatives: 70704.0000 - true_positives: 5675.0000 - false_positives: 1177.0000 - false_negatives: 2444.0000 - accuracy: 0.9547 - auc: 0.9664 - val_loss: 0.1802 - val_precision: 0.5569 - val_recall: 0.8706 - val_true_negatives: 16691.0000 - val_true_positives: 1702.0000 - val_false_positives: 1354.0000 - val_false_negatives: 253.0000 - val_accuracy: 0.9197 - val_auc: 0.9627\n","Epoch 2/5\n","10000/10000 [==============================] - 1544s 154ms/step - loss: 0.0811 - precision: 0.8722 - recall: 0.8149 - true_negatives: 70912.0000 - true_positives: 6616.0000 - false_positives: 969.0000 - false_negatives: 1503.0000 - accuracy: 0.9691 - auc: 0.9844 - val_loss: 0.2169 - val_precision: 0.5727 - val_recall: 0.8481 - val_true_negatives: 16808.0000 - val_true_positives: 1658.0000 - val_false_positives: 1237.0000 - val_false_negatives: 297.0000 - val_accuracy: 0.9233 - val_auc: 0.9551\n","Epoch 3/5\n","10000/10000 [==============================] - 1548s 155ms/step - loss: 0.0580 - precision: 0.9051 - recall: 0.8890 - true_negatives: 71124.0000 - true_positives: 7218.0000 - false_positives: 757.0000 - false_negatives: 901.0000 - accuracy: 0.9793 - auc: 0.9908 - val_loss: 0.2264 - val_precision: 0.6218 - val_recall: 0.8066 - val_true_negatives: 17086.0000 - val_true_positives: 1577.0000 - val_false_positives: 959.0000 - val_false_negatives: 378.0000 - val_accuracy: 0.9331 - val_auc: 0.9563\n","Epoch 4/5\n","10000/10000 [==============================] - 1553s 155ms/step - loss: 0.0444 - precision: 0.9288 - recall: 0.9169 - true_negatives: 71310.0000 - true_positives: 7444.0000 - false_positives: 571.0000 - false_negatives: 675.0000 - accuracy: 0.9844 - auc: 0.9941 - val_loss: 0.2317 - val_precision: 0.5361 - val_recall: 0.8670 - val_true_negatives: 16578.0000 - val_true_positives: 1695.0000 - val_false_positives: 1467.0000 - val_false_negatives: 260.0000 - val_accuracy: 0.9136 - val_auc: 0.9571\n","Epoch 5/5\n","10000/10000 [==============================] - 1551s 155ms/step - loss: 0.0319 - precision: 0.9486 - recall: 0.9472 - true_negatives: 71464.0000 - true_positives: 7690.0000 - false_positives: 417.0000 - false_negatives: 429.0000 - accuracy: 0.9894 - auc: 0.9963 - val_loss: 0.3625 - val_precision: 0.5630 - val_recall: 0.8184 - val_true_negatives: 16803.0000 - val_true_positives: 1600.0000 - val_false_positives: 1242.0000 - val_false_negatives: 355.0000 - val_accuracy: 0.9201 - val_auc: 0.9269\n"]}]},{"cell_type":"code","source":["# bert_cls_model.predict([x_test.input_ids[:10], x_test.token_type_ids[:10], x_test.attention_mask[:10]])\n","predictions_out = bert_cls_model.predict([x_test.input_ids, x_test.token_type_ids, x_test.attention_mask])"],"metadata":{"id":"t7rrtVKEdCOg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["predictions = predictions_out\n","\n","predictions_prob = pd.Series(predictions.flatten())\n","predictions = pd.Series(np.rint(predictions).flatten(), dtype = int)\n","test_ids = pd.Series(final_test.index)\n","test_check = final_test\n","test_check = test_check.reset_index(drop = True)\n","test_check = pd.concat([test_check, predictions, predictions_prob, test_ids], axis = 1)\n","test_check.rename(columns = {'violent': 'actual', 0: 'prediction', 2: 'id', 1: 'prediction_prob'}, inplace = True)\n","test_check.set_index('id', inplace = True)\n","test_check = test_check[['comment_text_transf', 'actual', 'prediction', 'prediction_prob']]"],"metadata":{"id":"wWDxr3ww_T5R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["wrong_predictions = test_check[test_check['actual'] != test_check['prediction']]"],"metadata":{"id":"zGG8DqHlAnWO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!ls ../../data/model_output"],"metadata":{"id":"se-7C4RITJA9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["wrong_predictions.to_csv('../../data/model_output/wrong_predictions_26.csv')"],"metadata":{"id":"5_GmUgMaSodI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[""],"metadata":{"id":"5KpH4vS1SoRy"}},{"cell_type":"code","source":["fp = wrong_predictions[wrong_predictions['prediction'] == 1]\n","fn = wrong_predictions[wrong_predictions['prediction'] == 0]"],"metadata":{"id":"8q490haZBDee"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# fp.sample(10)"],"metadata":{"id":"SAb6ZSUU8Yqv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# fp.sample(15, random_state = 2)"],"metadata":{"id":"45svLbOMPwfP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# fn.sample(15, random_state = 2)"],"metadata":{"id":"pVUIObi3QUzy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"bARQfD95EI57"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["UBXi2fAJe-yA"],"name":"Copy of base_modeling_GL","provenance":[]},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"9fd80025af1d405f887d3574075c2992":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_eea87e46bb334af39efca2d2bbef7e9c","IPY_MODEL_dc7e8f021de946fe9c8887ecdc6a6198","IPY_MODEL_cc61881a6f894d77a455745d766354e3"],"layout":"IPY_MODEL_925704a124144e19a6764a4a3e8eb4e7"}},"eea87e46bb334af39efca2d2bbef7e9c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_59515d36754244aea12f717a57e5d640","placeholder":"​","style":"IPY_MODEL_33a4a7f508d548d69b9d71efd38a2e90","value":"Downloading: 100%"}},"dc7e8f021de946fe9c8887ecdc6a6198":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e2abde66e0454606b7f1198378ebcf53","max":213450,"min":0,"orientation":"horizontal","style":"IPY_MODEL_913ddc8c0ac14c1cb667c366ffc1d4db","value":213450}},"cc61881a6f894d77a455745d766354e3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4b5ce12eafb84109a1252527b09ccfd1","placeholder":"​","style":"IPY_MODEL_28ad0ad10a6f439086efc499fa3a3863","value":" 208k/208k [00:00&lt;00:00, 2.19MB/s]"}},"925704a124144e19a6764a4a3e8eb4e7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"59515d36754244aea12f717a57e5d640":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"33a4a7f508d548d69b9d71efd38a2e90":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e2abde66e0454606b7f1198378ebcf53":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"913ddc8c0ac14c1cb667c366ffc1d4db":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4b5ce12eafb84109a1252527b09ccfd1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"28ad0ad10a6f439086efc499fa3a3863":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ab5e93c01c4641dbb69e6fd0c8f2360d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_327593d6e59448f0b04da7f17a6778b2","IPY_MODEL_fbf1d2bb603d4f70bbe24dc0686def4e","IPY_MODEL_1739bcd70c004b69a77196be5ea41020"],"layout":"IPY_MODEL_ce3486c0682b4f58bfead11b732cb82a"}},"327593d6e59448f0b04da7f17a6778b2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b003eb4a8e304da599705f498d484085","placeholder":"​","style":"IPY_MODEL_373f9106bf754682b515fa6a4f2c442f","value":"Downloading: 100%"}},"fbf1d2bb603d4f70bbe24dc0686def4e":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b3726523a2524b689ca03562350c495a","max":29,"min":0,"orientation":"horizontal","style":"IPY_MODEL_55898b8fd8e8492cbabfd03557e3ab96","value":29}},"1739bcd70c004b69a77196be5ea41020":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1f4d1cde1a28473ab74a4ea9c4b66a55","placeholder":"​","style":"IPY_MODEL_f45ec4ef41904d57b6f2072d3d16ef3d","value":" 29.0/29.0 [00:00&lt;00:00, 907B/s]"}},"ce3486c0682b4f58bfead11b732cb82a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b003eb4a8e304da599705f498d484085":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"373f9106bf754682b515fa6a4f2c442f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b3726523a2524b689ca03562350c495a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"55898b8fd8e8492cbabfd03557e3ab96":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1f4d1cde1a28473ab74a4ea9c4b66a55":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f45ec4ef41904d57b6f2072d3d16ef3d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e6ce905dd79b47d4a1254fc570679ca6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3ab15706d25642bcb03a5115496ad91d","IPY_MODEL_abab4c1928724911aef343dfbc0523b9","IPY_MODEL_3fa073871e5a45ae9d1a1870390cdf5b"],"layout":"IPY_MODEL_5c1cf91bf26742b8a267fdfe7de2d237"}},"3ab15706d25642bcb03a5115496ad91d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_52ef1bfe36524504ab7df0093a346449","placeholder":"​","style":"IPY_MODEL_2c0d99c6a4cf4c5baf64bbaf7f87ff2e","value":"Downloading: 100%"}},"abab4c1928724911aef343dfbc0523b9":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4aaec29fb163489e965f8261b1c0d54f","max":570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_187167fc82934686bf69e300a6dc5a21","value":570}},"3fa073871e5a45ae9d1a1870390cdf5b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_292c8a5c27b14971830f5182d0c0fef1","placeholder":"​","style":"IPY_MODEL_a7622ba6293e463ebbbe7c57386bf5db","value":" 570/570 [00:00&lt;00:00, 17.0kB/s]"}},"5c1cf91bf26742b8a267fdfe7de2d237":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"52ef1bfe36524504ab7df0093a346449":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2c0d99c6a4cf4c5baf64bbaf7f87ff2e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4aaec29fb163489e965f8261b1c0d54f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"187167fc82934686bf69e300a6dc5a21":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"292c8a5c27b14971830f5182d0c0fef1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a7622ba6293e463ebbbe7c57386bf5db":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}